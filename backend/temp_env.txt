# Database Configuration
DATABASE_URL=postgresql+asyncpg://postgres:postgrespw@db:5432/postgres
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgrespw
POSTGRES_DB=postgres

# Redis Configuration
REDIS_URL=redis://redis:6379/0
CELERY_BROKER_URL=redis://redis:6379/0
CELERY_RESULT_BACKEND=redis://redis:6379/0

# JWT Configuration
JWT_SECRET_KEY=your-secret-key-here-change-this-in-production
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30

# API Keys (replace with actual keys)
OPENAI_API_KEY=your-openai-api-key
ANTHROPIC_API_KEY=your-anthropic-api-key

# Service URLs
AUTH_SERVICE_URL=http://auth-service:8000
IMPORT_SERVICE_URL=http://import-service:8000
CREDIT_SERVICE_URL=http://credit-service:8000
EXPORT_SERVICE_URL=http://export-service:8000
ANALYTICS_SERVICE_URL=http://analytics-service:8000
NOTIFICATION_SERVICE_URL=http://notification-service:8000

# Frontend URLs
VITE_AUTH_URL=http://localhost:8001
VITE_IMPORT_URL=http://localhost:8002
VITE_CREDIT_URL=http://localhost:8003
VITE_EXPORT_URL=http://localhost:8004
VITE_ANALYTICS_URL=http://localhost:8005
VITE_NOTIFICATION_URL=http://localhost:8006

# Other Configuration
DEBUG=True
ENVIRONMENT=development

services:
  db:
    image: postgres:15
    container_name: captely-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgrespw
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - captely_db-data:/var/lib/postgresql/data
      - ./setup_db.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: captely-redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    container_name: captely-auth-service
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8001:8000"
    volumes:
      - ./services/common:/app/common
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgrespw@db:5432/postgres
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
    entrypoint: ["/usr/local/bin/wait-for-db.sh", "db"]
    restart: on-failure

  import-service:
    build:
      context: ./services/import-service
      dockerfile: Dockerfile
    container_name: captely-import-service
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8002:8000"
    volumes:
      - ./services/common:/app/common
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgrespw@db:5432/postgres
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
    entrypoint: ["/usr/local/bin/wait-for-db.sh", "db"]
    restart: on-failure

  credit-service:
    build:
      context: ./services/credit-service
      dockerfile: Dockerfile
    container_name: captely-credit-service
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8003:8000"
    volumes:
      - ./services/common:/app/common
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgrespw@db:5432/postgres
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
    entrypoint: ["/usr/local/bin/wait-for-db.sh", "db"]
    restart: on-failure

  enrichment-worker:
    build:
      context: ./services/enrichment-worker
      dockerfile: Dockerfile
    container_name: captely-enrichment-worker
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./services/common:/app/common
      - ./csv:/app/csv
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgrespw@db:5432/postgres
      - REDIS_URL=redis://redis:6379/0
      - PYTHONPATH=/app
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    command: ["celery", "-A", "app.tasks", "worker", "--loglevel=info", "-E", "-Q", "contact_enrichment,enrichment_batch,cascade_enrichment,db_operations"]
    restart: on-failure

  flower:
    image: mher/flower:2.0.1
    container_name: captely-flower
    env_file: .env
    depends_on:
      redis:
        condition: service_healthy
      enrichment-worker:
        condition: service_started
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - FLOWER_BASIC_AUTH=admin:flowerpassword
      - FLOWER_PORT=5555
    command: ["sh", "-c", "sleep 15 && celery --broker=redis://redis:6379/0 flower --port=5555 --basic-auth=admin:flowerpassword"]
    restart: on-failure

  export-service:
    build:
      context: ./services/export-service
      dockerfile: Dockerfile
    container_name: captely-export-service
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8004:8000"
    volumes:
      - ./services/common:/app/common
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgrespw@db:5432/postgres
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
    entrypoint: ["/usr/local/bin/wait-for-db.sh", "db"]
    restart: on-failure

  analytics-service:
    build:
      context: ./services/analytics-service
      dockerfile: Dockerfile
    container_name: captely-analytics-service
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8005:8000"
    volumes:
      - ./services/common:/app/common
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgrespw@db:5432/postgres
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
    entrypoint: ["/usr/local/bin/wait-for-db.sh", "db"]
    restart: on-failure

  notification-service:
    build:
      context: ./services/notification-service
      dockerfile: Dockerfile
    container_name: captely-notification-service
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8006:8000"
    volumes:
      - ./services/common:/app/common
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgrespw@db:5432/postgres
      - REDIS_URL=redis://redis:6379/0
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
    entrypoint: ["/usr/local/bin/wait-for-db.sh", "db"]
    restart: on-failure

  frontend:
    build:
      context: ./frontend/nextjs-app
      dockerfile: Dockerfile.dev
    container_name: captely-frontend
    env_file: .env
    depends_on:
      - auth-service
      - import-service
      - credit-service
      - export-service
      - analytics-service
    ports:
      - "5173:5173"
    environment:
      - VITE_AUTH_URL=http://localhost:8001
      - VITE_IMPORT_URL=http://localhost:8002
      - VITE_CREDIT_URL=http://localhost:8003
      - VITE_EXPORT_URL=http://localhost:8004
      - VITE_ANALYTICS_URL=http://localhost:8005
      - VITE_NOTIFICATION_URL=http://localhost:8006
    restart: unless-stopped

volumes:
  captely_db-data: 