events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;
    
    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 50M;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=2r/s;
    
    # WebSocket upgrade map
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
    
    # Upstream definitions - Using internal container ports
    upstream frontend {
        server frontend:80;
    }
    
    upstream auth_service {
        server auth-service:8000;
    }
    
    upstream import_service {
        server import-service:8000;
    }
    
    upstream credit_service {
        server credit-service:8000;
    }
    
    upstream export_service {
        server export-service:8000;
    }
    
    upstream analytics_service {
        server analytics-service:8000;
    }
    
    upstream notification_service {
        server notification-service:8000;
    }
    
    upstream billing_service {
        server billing-service:8000;
    }
    
    upstream crm_service {
        server crm-service:8000;
    }
    
    upstream flower_service {
        server flower:5555;
    }
    
    # HTTP to HTTPS redirect
    server {
        listen 80;
        server_name _;
        return 301 https://$host$request_uri;
    }
    
    # Main HTTPS server
    server {
        listen 443 ssl;
        server_name captely.com;
        
        # SSL configuration
        ssl_certificate /etc/letsencrypt/live/captely.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/captely.com/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        
        # Frontend (Static Files)
        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_read_timeout 86400;
        }
        
        # AUTH SERVICE - INTELLIGENT URL ROUTING - FIXES DOUBLE /auth/ ISSUE
        # Handles both /api/auth/signup and /api/auth/auth/signup → /auth/signup
        location /api/auth/ {
            limit_req zone=api burst=20 nodelay;
            
            # Smart URL rewriting to handle double /auth/ patterns
            # /api/auth/auth/signup → /auth/signup
            # /api/auth/signup → /auth/signup
            rewrite ^/api/auth/auth/(.*)$ /auth/$1 break;
            rewrite ^/api/auth/(.*)$ /auth/$1 break;
            
            proxy_pass http://auth_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400;
        }

        # AUTH SERVICE - /api/users/* endpoints (profile, etc.)
        location /api/users/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://auth_service/api/users/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400;
        }

        # AUTH SERVICE - /api/settings/* endpoints
        location /api/settings/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://auth_service/api/settings/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400;
        }

        # AUTH SERVICE - /api/security/* endpoints
        location /api/security/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://auth_service/api/security/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400;
        }

        # AUTH SERVICE - /api/team/* endpoints
        location /api/team/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://auth_service/api/team/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400;
        }
        
        # IMPORT SERVICE - INTELLIGENT URL ROUTING - FIXES DOUBLE /import/ ISSUE
        # Handles both /api/import/jobs and /api/import/import/jobs → /api/jobs  
        location /api/import/ {
            limit_req zone=upload burst=5 nodelay;
            
            # Smart URL rewriting to handle double /import/ patterns
            rewrite ^/api/import/import/(.*)$ /api/$1 break;
            rewrite ^/api/import/(.*)$ /api/$1 break;
            
            proxy_pass http://import_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
        }
        
        # CREDIT SERVICE - /api/credit/* endpoints (legacy routing)
        location /api/credit/ {
            limit_req zone=api burst=20 nodelay;
            
            # Smart URL rewriting to handle double /credit/ patterns and map to /credits/
            rewrite ^/api/credit/credit/(.*)$ /api/credits/$1 break;
            rewrite ^/api/credit/(.*)$ /api/credits/$1 break;
            
            proxy_pass http://credit_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # CREDIT SERVICE - /api/credits/* endpoints (main routing)
        # Frontend calls /api/credits/info - route to /api/credits/info
        location /api/credits/ {
            limit_req zone=api burst=20 nodelay;
            
            # Smart URL rewriting to handle double /credits/ patterns  
            rewrite ^/api/credits/credits/(.*)$ /api/credits/$1 break;
            rewrite ^/api/credits/(.*)$ /api/credits/$1 break;
            
            proxy_pass http://credit_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # EXPORT SERVICE - INTELLIGENT URL ROUTING - FIXES DOUBLE /export/ ISSUE
        # Handles both /api/export/jobs and /api/export/export/jobs → /api/jobs
        location /api/export/ {
            limit_req zone=api burst=10 nodelay;
            
            # Smart URL rewriting to handle double /export/ patterns
            rewrite ^/api/export/export/(.*)$ /api/$1 break;
            rewrite ^/api/export/(.*)$ /api/$1 break;
            
            proxy_pass http://export_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 300s;
        }
        
        # ANALYTICS SERVICE - INTELLIGENT URL ROUTING - FIXES DOUBLE /analytics/ ISSUE
        # Handles both /api/analytics/dashboard and /api/analytics/analytics/dashboard → /api/analytics/dashboard
        location /api/analytics/ {
            limit_req zone=api burst=15 nodelay;
            
            # Smart URL rewriting to handle double /analytics/ patterns
            rewrite ^/api/analytics/analytics/(.*)$ /api/analytics/$1 break;
            rewrite ^/api/analytics/(.*)$ /api/analytics/$1 break;
            
            proxy_pass http://analytics_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # NOTIFICATION SERVICE - INTELLIGENT URL ROUTING - FIXES DOUBLE /notification/ ISSUE
        # Maps /api/notification/ to /api/notifications/ and handles double patterns
        location /api/notification/ {
            limit_req zone=api burst=10 nodelay;
            
            # Smart URL rewriting to handle double /notification/ patterns and map to /notifications/
            rewrite ^/api/notification/notification/(.*)$ /api/notifications/$1 break;
            rewrite ^/api/notification/(.*)$ /api/notifications/$1 break;
            
            proxy_pass http://notification_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # BILLING SERVICE - INTELLIGENT URL ROUTING - FIXES DOUBLE /billing/ ISSUE  
        # Handles both /api/billing/packages and /api/billing/billing/packages → /api/billing/packages
        location /api/billing/ {
            limit_req zone=api burst=10 nodelay;
            
            # Smart URL rewriting to handle double /billing/ patterns
            rewrite ^/api/billing/billing/(.*)$ /api/billing/$1 break;
            rewrite ^/api/billing/(.*)$ /api/billing/$1 break;
            
            proxy_pass http://billing_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # STRIPE WEBHOOKS - Correct routing
        location /api/webhooks/stripe {
            proxy_pass http://billing_service/api/webhooks/stripe;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Stripe-Signature $http_stripe_signature;
            proxy_read_timeout 60s;
            proxy_send_timeout 60s;
            proxy_request_buffering off;
        }
        
        # CRM SERVICE - INTELLIGENT URL ROUTING - FIXES DOUBLE /crm/ ISSUE
        # Handles both /api/crm/contacts and /api/crm/crm/contacts → /api/contacts
        location /api/crm/ {
            limit_req zone=api burst=20 nodelay;
            
            # Smart URL rewriting to handle double /crm/ patterns
            rewrite ^/api/crm/crm/(.*)$ /api/$1 break;
            rewrite ^/api/crm/(.*)$ /api/$1 break;
            
            proxy_pass http://crm_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Flower monitoring (protected)
        location /flower/ {
            auth_basic "Flower Monitoring";
            auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://flower_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}