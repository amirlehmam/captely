events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Logging with detailed debug info
    log_format detailed '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for" '
                       'upstream_addr=$upstream_addr '
                       'upstream_response_time=$upstream_response_time '
                       'request_time=$request_time';
    
    access_log /var/log/nginx/access.log detailed;
    error_log /var/log/nginx/error.log debug;
    
    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 50M;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=2r/s;
    
    # WebSocket upgrade map
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
    
    # Upstream definitions - Using internal container ports
    upstream frontend {
        server frontend:80;
    }
    
    upstream auth_service {
        server auth-service:8000;
    }
    
    upstream import_service {
        server import-service:8000;
    }
    
    upstream credit_service {
        server credit-service:8000;
    }
    
    upstream export_service {
        server export-service:8000;
    }
    
    upstream analytics_service {
        server analytics-service:8000;
    }
    
    upstream notification_service {
        server notification-service:8000;
    }
    
    upstream billing_service {
        server billing-service:8000;
    }
    
    upstream crm_service {
        server crm-service:8000;
    }
    
    upstream flower_service {
        server flower:5555;
    }
    
    # HTTP to HTTPS redirect
    server {
        listen 80;
        server_name _;
        
        # Health check endpoint for Docker health checks
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Redirect everything else to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }
    
    # Main HTTPS server
    server {
        listen 443 ssl;
        server_name captely.com;
        
        # SSL configuration
        ssl_certificate /etc/letsencrypt/live/captely.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/captely.com/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        
        # ==========================================
        # AUTH SERVICE ROUTING - CLEAN & SIMPLE
        # ==========================================
        
        # Auth endpoints: /api/auth/* → auth-service:/auth/*
        location /api/auth/ {
            limit_req zone=api burst=20 nodelay;
            
            # Remove /api prefix and keep /auth/
            rewrite ^/api/auth/(.*)$ /auth/$1 break;
            
            proxy_pass http://auth_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400;
            
            # Debug headers
            add_header X-Debug-Upstream "auth_service" always;
            add_header X-Debug-Rewrite "/auth/$1" always;
        }
        
        # User management endpoints: /api/users/* → auth-service:/api/users/*
        location /api/users/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://auth_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400;
            
            add_header X-Debug-Upstream "auth_service" always;
        }
        
        # Settings endpoints: /api/settings/* → auth-service:/api/settings/*
        location /api/settings/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://auth_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400;
            
            add_header X-Debug-Upstream "auth_service" always;
        }
        
        # Security endpoints: /api/security/* → auth-service:/api/security/*
        location /api/security/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://auth_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400;
            
            add_header X-Debug-Upstream "auth_service" always;
        }
        
        # Team endpoints: /api/team/* → auth-service:/api/team/*
        location /api/team/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://auth_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400;
            
            add_header X-Debug-Upstream "auth_service" always;
        }
        
        # ==========================================
        # OTHER SERVICES ROUTING - CLEAN & SIMPLE
        # ==========================================
        
        # Import service: /api/import/* → import-service:/api/*
        location /api/import/ {
            limit_req zone=upload burst=5 nodelay;
            
            # Remove the /import part: /api/import/jobs → /api/jobs
            rewrite ^/api/import/(.*)$ /api/$1 break;
            
            proxy_pass http://import_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
            
            add_header X-Debug-Upstream "import_service" always;
        }
        
        # Import service (plural): /api/imports/* → import-service:/api/imports/*
        location /api/imports/ {
            limit_req zone=upload burst=5 nodelay;

            proxy_pass http://import_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;

            add_header X-Debug-Upstream "import_service" always;
        }
        
        # CRM batches endpoint: /api/crm/batches → import-service:/api/crm/batches
        location /api/crm/batches {
            proxy_pass http://import_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 60s;
            proxy_send_timeout 60s;

            add_header X-Debug-Upstream "import_service" always;
        }
        
        # CRM contacts stats: /api/crm/contacts/stats → import-service:/api/crm/contacts/stats
        location /api/crm/contacts/stats {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://import_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            add_header X-Debug-Upstream "import_service" always;
        }
        
        # CRM contacts (with query params): /api/crm/contacts → import-service:/api/crm/contacts
        location /api/crm/contacts {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://import_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            add_header X-Debug-Upstream "import_service" always;
        }
        
        # Jobs endpoint: /api/jobs → import-service:/api/jobs (for batches page)
        location /api/jobs {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://import_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 60s;
            proxy_send_timeout 60s;

            add_header X-Debug-Upstream "import_service" always;
        }
        
        # Credit service: /api/credits/* → credit-service:/api/credits/*
        location /api/credits/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://credit_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            add_header X-Debug-Upstream "credit_service" always;
        }
        
        # Export service: /api/export/* → export-service:/api/*
        location /api/export/ {
            limit_req zone=api burst=10 nodelay;
            
            # Remove the /export part: /api/export/download → /api/download
            rewrite ^/api/export/(.*)$ /api/$1 break;
            
            proxy_pass http://export_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 300s;
            
            add_header X-Debug-Upstream "export_service" always;
        }
        
        # Analytics service: /api/analytics/* → analytics-service:/api/analytics/*
        location /api/analytics/ {
            limit_req zone=api burst=15 nodelay;
            
            proxy_pass http://analytics_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            add_header X-Debug-Upstream "analytics_service" always;
        }
        
        # Notification service: /api/notifications/* → notification-service:/api/notifications/*
        location /api/notifications/ {
            limit_req zone=api burst=10 nodelay;
            
            proxy_pass http://notification_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            add_header X-Debug-Upstream "notification_service" always;
        }
        
        # Billing service: /api/billing/* → billing-service:/api/billing/*
        location /api/billing/ {
            limit_req zone=api burst=10 nodelay;
            
            proxy_pass http://billing_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            add_header X-Debug-Upstream "billing_service" always;
        }

        # Stripe webhooks: /api/webhooks/stripe → billing-service:/api/webhooks/stripe
        location /api/webhooks/stripe {
            proxy_pass http://billing_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Stripe-Signature $http_stripe_signature;
            proxy_read_timeout 60s;
            proxy_send_timeout 60s;
            proxy_request_buffering off;
            
            add_header X-Debug-Upstream "billing_service" always;
        }
        
        # Additional billing endpoints that were falling through to frontend
        location /api/dashboard {
            limit_req zone=api burst=10 nodelay;
            
            proxy_pass http://billing_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            add_header X-Debug-Upstream "billing_service" always;
        }
        
        location /api/packages {
            limit_req zone=api burst=10 nodelay;
            
            proxy_pass http://billing_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            add_header X-Debug-Upstream "billing_service" always;
        }
        
        location /api/history {
            limit_req zone=api burst=10 nodelay;
            
            proxy_pass http://billing_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            add_header X-Debug-Upstream "billing_service" always;
        }
        
        location /api/enrichment-history {
            limit_req zone=api burst=10 nodelay;
            
            proxy_pass http://billing_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            add_header X-Debug-Upstream "billing_service" always;
        }
        
        # CRM service: /api/contacts/* and /api/activities/* → crm-service:/api/*
        location ~ ^/api/(contacts|activities|campaigns) {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://crm_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            add_header X-Debug-Upstream "crm_service" always;
        }
        
        # CRM specific endpoints: /api/crm/contacts/* → crm-service:/api/crm/contacts/*
        location /api/crm/contacts {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://crm_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            add_header X-Debug-Upstream "crm_service" always;
        }
        
        # Verification stats: /api/verification/* → import-service:/api/verification/*
        location /api/verification/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://import_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            add_header X-Debug-Upstream "import_service" always;
        }
        
        # ==========================================
        # UTILITY ENDPOINTS
        # ==========================================
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # API health checks
        location /api/health {
            access_log off;
            return 200 "api healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Flower monitoring (protected)
        location /flower/ {
            auth_basic "Flower Monitoring";
            auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://flower_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # ==========================================
        # FRONTEND (MUST BE LAST)
        # ==========================================
        
        # Frontend (Static Files) - CATCH ALL
        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_read_timeout 86400;
        }
    }
}