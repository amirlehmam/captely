#!/bin/bash

echo "üî• COMPLETE DATABASE RESET - FIXING ALL TABLE ISSUES"
echo "This will ensure your website works continuously without errors"

# Stop all containers first
echo "üì¢ Stopping all containers..."
docker compose down

# Remove the database volume to start fresh
echo "üóëÔ∏è  Removing old database volume..."
docker volume rm backend_captely_db-data 2>/dev/null || true
docker volume rm captely_db-data 2>/dev/null || true

# Remove any orphaned containers
echo "üßπ Cleaning up orphaned containers..."
docker container prune -f

# Rebuild the database container (in case of image issues)
echo "üî® Rebuilding database..."
docker compose up -d db

# Wait for database to be ready
echo "‚è≥ Waiting for database to initialize..."
sleep 10

# Check if init.sql was executed
echo "üîç Verifying database schema..."
docker compose exec db psql -U postgres -d postgres -c "\dt" || echo "Tables check failed, continuing..."

# Start all services
echo "üöÄ Starting all services..."
docker compose up -d

# Wait for services to be ready
echo "‚è≥ Waiting for services to start..."
sleep 15

# Verify all tables exist
echo "‚úÖ Final verification - checking all required tables..."
docker compose exec db psql -U postgres -d postgres -c "
SELECT 
    CASE 
        WHEN EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'users') THEN '‚úÖ users table exists'
        ELSE '‚ùå users table missing'
    END AS users_check,
    CASE 
        WHEN EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'contacts') THEN '‚úÖ contacts table exists'
        ELSE '‚ùå contacts table missing'
    END AS contacts_check,
    CASE 
        WHEN EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'import_jobs') THEN '‚úÖ import_jobs table exists'
        ELSE '‚ùå import_jobs table missing'
    END AS import_jobs_check,
    CASE 
        WHEN EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'email_verifications') THEN '‚úÖ email_verifications table exists'
        ELSE '‚ùå email_verifications table missing'
    END AS email_verifications_check;
"

# Check if we need to manually run init.sql
echo "üîß Checking if manual schema creation is needed..."
TABLE_COUNT=$(docker compose exec db psql -U postgres -d postgres -t -c "SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = 'public';" | xargs)

if [ "$TABLE_COUNT" -lt "10" ]; then
    echo "‚ö†Ô∏è  Tables missing! Running init.sql manually..."
    docker compose exec -T db psql -U postgres -d postgres < init.sql
    echo "‚úÖ Manual schema creation complete"
else
    echo "‚úÖ Database schema looks good ($TABLE_COUNT tables found)"
fi

echo ""
echo "üéâ DATABASE RESET COMPLETE!"
echo ""
echo "‚úÖ All services should now work without 'relation does not exist' errors"
echo "‚úÖ OAuth login should work properly"
echo "‚úÖ Dashboard analytics should load"
echo "‚úÖ Import functionality should work"
echo "‚úÖ Contact management should work"
echo ""
echo "üåê Your website should now be fully functional at:"
echo "   http://localhost:3000 (local)"
echo "   https://captely.com (production)"
echo ""
echo "üîç To check service status: docker compose ps"
echo "üìã To view logs: docker compose logs -f [service-name]" 