services:
  db:
    image: postgres:15
    container_name: captely-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgrespw
      POSTGRES_DB: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - captely_db-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: captely-redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    container_name: captely-auth-service
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8001:8000"
    volumes:
      - ./services/common:/app/common
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgrespw@db:5432/postgres
      - VITE_GOOGLE_CLIENT_ID=${VITE_GOOGLE_CLIENT_ID:-placeholder-google-client-id}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET:-placeholder-google-client-secret}
      - RESEND_API_KEY=${RESEND_API_KEY:-placeholder-resend-api-key}
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
    entrypoint: ["/usr/local/bin/wait-for-db.sh", "db"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3

  import-service:
    build:
      context: ./services/import-service
      dockerfile: Dockerfile
    container_name: captely-import-service
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8002:8000"
    volumes:
      - ./services/common:/app/common
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgrespw@db:5432/postgres
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
    entrypoint: ["/usr/local/bin/wait-for-db.sh", "db"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3

  credit-service:
    build:
      context: ./services/credit-service
      dockerfile: Dockerfile
    container_name: captely-credit-service
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8003:8000"
    volumes:
      - ./services/common:/app/common
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgrespw@db:5432/postgres
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
    entrypoint: ["/usr/local/bin/wait-for-db.sh", "db"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3

  enrichment-worker:
    build:
      context: ./services/enrichment-worker
      dockerfile: Dockerfile
    container_name: captely-enrichment-worker
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./services/common:/app/common
      - ./csv:/app/csv
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgrespw@db:5432/postgres
      - REDIS_URL=redis://redis:6379/0
      - PYTHONPATH=/app
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    command: ["celery", "-A", "app.tasks", "worker", "--loglevel=info", "-E", "-Q", "contact_enrichment,enrichment_batch,cascade_enrichment,db_operations"]
    restart: unless-stopped

  flower:
    image: mher/flower:2.0.1
    container_name: captely-flower
    env_file: .env
    depends_on:
      redis:
        condition: service_healthy
      enrichment-worker:
        condition: service_started
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - FLOWER_BASIC_AUTH=admin:flowerpassword
      - FLOWER_PORT=5555
      - FLOWER_URL_PREFIX=
      - FLOWER_CORS_ALLOWED_ORIGINS=*
    command: ["sh", "-c", "sleep 15 && celery --broker=redis://redis:6379/0 flower --port=5555 --basic-auth=admin:flowerpassword --url-prefix= --cors-allowed-origins='*' --auto-refresh=true"]
    restart: unless-stopped

  export-service:
    build:
      context: ./services/export-service
      dockerfile: Dockerfile
    container_name: captely-export-service
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8004:8000"
    volumes:
      - ./services/common:/app/common
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgrespw@db:5432/postgres
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
    entrypoint: ["/usr/local/bin/wait-for-db.sh", "db"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3

  analytics-service:
    build:
      context: ./services/analytics-service
      dockerfile: Dockerfile
    container_name: captely-analytics-service
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8005:8000"
    volumes:
      - ./services/common:/app/common
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgrespw@db:5432/postgres
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
    entrypoint: ["/usr/local/bin/wait-for-db.sh", "db"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3

  notification-service:
    build:
      context: ./services/notification-service
      dockerfile: Dockerfile
    container_name: captely-notification-service
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8006:8000"
    volumes:
      - ./services/common:/app/common
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgrespw@db:5432/postgres
      - REDIS_URL=redis://redis:6379/0
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
    entrypoint: ["/usr/local/bin/wait-for-db.sh", "db"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3

  billing-service:
    build:
      context: ./services/billing-service
      dockerfile: Dockerfile
    container_name: captely-billing-service
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8007:8000"
    volumes:
      - ./services/common:/app/common
    environment:
      - DATABASE_URL=postgresql+psycopg2://postgres:postgrespw@db:5432/postgres
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET:-whsec_placeholder}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
    entrypoint: ["/usr/local/bin/wait-for-db.sh", "db"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3

  crm-service:
    build:
      context: ./services/crm-service
      dockerfile: Dockerfile
    container_name: captely-crm-service
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8008:8000"
    volumes:
      - ./services/common:/app/common
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgrespw@db:5432/postgres
      - PYTHONPATH=/app
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
    entrypoint: ["/usr/local/bin/wait-for-db.sh", "db"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend/nextjs-app
      dockerfile: Dockerfile.prod
      args:
        - VITE_GOOGLE_CLIENT_ID=${VITE_GOOGLE_CLIENT_ID:-placeholder-google-client-id}
        - VITE_APPLE_CLIENT_ID=${VITE_APPLE_CLIENT_ID:-com.captely.signin}
        - VITE_STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}
    container_name: captely-frontend
    env_file: .env
    environment:
      - VITE_GOOGLE_CLIENT_ID=${VITE_GOOGLE_CLIENT_ID:-placeholder-google-client-id}
      - VITE_APPLE_CLIENT_ID=${VITE_APPLE_CLIENT_ID:-com.captely.signin}
      - VITE_STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}
    depends_on:
      - auth-service
      - import-service
      - credit-service
      - export-service
      - analytics-service
      - billing-service
      - crm-service
    ports:
      - "3000:80"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: captely-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - frontend
      - auth-service
      - import-service
      - credit-service
      - export-service
      - analytics-service
      - notification-service
      - billing-service
      - crm-service
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  captely_db-data: 
  redis-data: 