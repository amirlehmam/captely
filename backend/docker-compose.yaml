version: '3.8'

services:
  # — Local Postgres for development —
  db:
    image: postgres:15
    container_name: captely-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgrespw
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - captely_db-data:/var/lib/postgresql/data

  # — Redis for Celery & caching —
  redis:
    image: redis:7-alpine
    container_name: captely-redis
    ports:
      - "6379:6379"
    restart: unless-stopped

  # — Auth Service —
  auth-service:
    build:
      context: ./services/auth-service
    container_name: captely-auth-service
    env_file: .env
    depends_on:
      - db
      - redis
    ports:
      - "8001:8000"
    volumes:
      - ./services/common:/app/common
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgrespw@db:5432/postgres
    command: ["db", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
    restart: on-failure

  # — Import Service —
  import-service:
    build:
      context: ./services/import-service
    container_name: captely-import-service
    env_file: .env
    depends_on:
      - db
      - redis
    ports:
      - "8002:8000"
    volumes:
      - ./services/common:/app/common
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgrespw@db:5432/postgres
    command: ["db", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
    restart: on-failure

  # — Credit Service —
  credit-service:
    build:
      context: ./services/credit-service
    container_name: captely-credit-service
    env_file: .env
    depends_on:
      - db
      - redis
    ports:
      - "8003:8000"
    volumes:
      - ./services/common:/app/common
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgrespw@db:5432/postgres
    command: ["db", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
    restart: on-failure

  # — Enrichment Worker (Celery) —
  enrichment-worker:
    build:
      context: ./services/enrichment-worker
    container_name: captely-enrichment-worker
    env_file: .env
    depends_on:
      - db
      - redis
    volumes:
      - ./services/common:/app/common
      - ./csv:/app/csv
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgrespw@db:5432/postgres
      - REDIS_URL=redis://redis:6379/0
      - PYTHONPATH=/app
    command: ["db", "celery", "-A", "app.tasks", "worker", "--loglevel=info"]
    restart: on-failure

  # — Enrichment Monitor (Flower) —
  enrichment-flower:
    image: mher/flower:1.0
    container_name: captely-flower
    env_file: .env
    depends_on:
      - redis
      - enrichment-worker
    ports:
      - "5555:5555"
    environment:
      - FLOWER_BROKER=redis://redis:6379/0
      - FLOWER_BASIC_AUTH=admin:flowerpassword
    restart: on-failure

  # — Frontend (Next.js or Vite) —
  frontend:
    build:
      context: ./frontend/nextjs-app
      dockerfile: Dockerfile.dev
    container_name: captely-frontend
    env_file: .env
    depends_on:
      - auth-service
      - import-service
      - credit-service
    ports:
      - "5173:5173"
    environment:
      - VITE_AUTH_URL=http://localhost:8001
      - VITE_IMPORT_URL=http://localhost:8002
      - VITE_CREDIT_URL=http://localhost:8003
    restart: unless-stopped

volumes:
  captely_db-data:
