version: '3.8'

services:

  redis:
    image: redis:7-alpine
    container_name: captely-redis
    ports:
      - "6379:6379"
    restart: unless-stopped

  db:
    image: postgres:16-alpine
    container_name: captely-db
    env_file:
      - .env
    environment:
      POSTGRES_DB:      ${POSTGRES_DB}
      POSTGRES_USER:    ${POSTGRES_USER}
      POSTGRES_PASSWORD:${POSTGRES_PASSWORD}
    volumes:
      - captely_db_data:/var/lib/postgresql/data
    restart: unless-stopped

  auth-service:
    build:
      context: ./backend/services/auth-service
    container_name: captely-auth-service
    env_file:
      - ./backend/.env
    environment:
      # This tells SQLAlchemy/asyncpg how to reach the DB
      - SQLALCHEMY_DATABASE_URI=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    command: >
      uvicorn app.main:app
      --host 0.0.0.0
      --port 8000
    ports:
      - "8001:8000"
    depends_on:
      - db
      - redis
    restart: on-failure

  import-service:
    build:
      context: ./services/import-service
      dockerfile: Dockerfile
    container_name: captely-import-service
    env_file:
      - .env
    command: >
      uvicorn app.main:app
      --host 0.0.0.0
      --port 8000
    ports:
      - "8002:8000"
    depends_on:
      - db
      - redis
    restart: on-failure

  credit-service:
    build:
      context: ./services/credit-service
      dockerfile: Dockerfile
    container_name: captely-credit-service
    env_file:
      - .env
    command: >
      uvicorn app.main:app
      --host 0.0.0.0
      --port 8000
    ports:
      - "8003:8000"
    depends_on:
      - db
      - redis
    restart: on-failure

  enrichment-worker:
    build:
      context: ./services/enrichment-worker
      dockerfile: Dockerfile
    container_name: captely-enrichment-worker
    env_file:
      - .env
    command: >
      celery -A common.celery_app worker --loglevel=info
    depends_on:
      - db
      - redis
    restart: on-failure

volumes:
  captely_db_data:
