version: "3.8"

services:

  # — Shared Redis + Postgres —
  redis:
    image: redis:7-alpine
    container_name: captely-redis
    ports:
      - "6379:6379"
    restart: unless-stopped

  db:
    image: postgres:16-alpine
    container_name: captely-db
    environment:
      POSTGRES_USER: captely
      POSTGRES_PASSWORD: captely_pwd
      POSTGRES_DB: captely
    volumes:
      - captely_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U captely"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # — Auth service —
  auth-service:
    build:
      context: ./services/auth-service
    container_name: captely-auth-service
    environment:
      # match your Settings() defaults or .env
      DATABASE_URL: postgresql+asyncpg://captely:captely_pwd@db:5432/captely
      JWT_SECRET: devsecret
      JWT_ALGORITHM: HS256
      JWT_EXP_MINUTES: 60
      CORS_ORIGINS: http://localhost:3000
    command: >
      uvicorn app.main:app
      --host 0.0.0.0
      --port 8000
    depends_on:
      - db
      - redis
    ports:
      - "8001:8000"
    restart: on-failure

  # — Import service —
  import-service:
    build:
      context: ./backend/services/import-service
    container_name: captely-import-service
    environment:
      DATABASE_URL: postgresql+asyncpg://captely:captely_pwd@db:5432/captely
    command: >
      uvicorn app.main:app
      --host 0.0.0.0
      --port 8000
    depends_on:
      - db
      - redis
    ports:
      - "8002:8000"
    restart: on-failure

  # — Credit service —
  credit-service:
    build:
      context: ./backend/services/credit-service
    container_name: captely-credit-service
    environment:
      DATABASE_URL: postgresql+asyncpg://captely:captely_pwd@db:5432/captely
    command: >
      uvicorn app.main:app
      --host 0.0.0.0
      --port 8000
    depends_on:
      - db
      - redis
    ports:
      - "8003:8000"
    restart: on-failure

  # — Enrichment Celery worker —
  enrichment-worker:
    build:
      context: ./backend/services/enrichment-worker
    container_name: captely-enrichment-worker
    environment:
      DATABASE_URL: postgresql+asyncpg://captely:captely_pwd@db:5432/captely
      CELERY_BROKER_URL: redis://redis:6379/0
    command: >
      celery -A common.celery_app worker --loglevel=info
    depends_on:
      - db
      - redis
    restart: on-failure

  # — Next.js frontend (dev) —
  frontend:
    build:
      context: ./frontend/nextjs-app
      dockerfile: Dockerfile.dev
    container_name: captely-frontend
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_AUTH_URL:   http://auth-service:8000
      NEXT_PUBLIC_IMPORT_URL: http://import-service:8000
      NEXT_PUBLIC_CREDIT_URL: http://credit-service:8000
    depends_on:
      - auth-service
      - import-service
      - credit-service
    restart: unless-stopped

volumes:
  captely_db_data: