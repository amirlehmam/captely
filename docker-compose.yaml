version: "3.8"
services:
#  db:
#    image: postgres:15
#    container_name: captely-db
#    environment:
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: postgrespw
#      POSTGRES_DB: postgres
#    ports:
#      - "5432:5432"
#    volumes:
#      - captely_db-data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    container_name: captely-redis
    ports:
      - "6379:6379"
    restart: unless-stopped

  auth-service:
    build:
      context: ./backend/services/auth-service
      dockerfile: Dockerfile
    container_name: captely-auth-service
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_started
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:Capitalsteez_94400@db.kkbqrrrjlfxxtkboxmld.supabase.co:5432/postgres
      - PYTHONPATH=/app:/app/common
    ports:
      - "8001:8000"
    volumes:
      - ./backend/services/common:/app/common
    restart: on-failure
    entrypoint: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]

  import-service:
    build:
      context: ./backend/services/import-service
      dockerfile: Dockerfile
    container_name: captely-import-service
    depends_on:
      - redis
    env_file: .env
    environment:
      - DATABASE_URL=postgresql://postgres:Capitalsteez_94400@db.kkbqrrrjlfxxtkboxmld.supabase.co:5432/postgres
      - PYTHONPATH=/app:/app/common
    ports:
      - "8002:8000"
    volumes:
      - ./backend/services/common:/app/common
    entrypoint: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    restart: on-failure

  credit-service:
    build:
      context: ./backend/services/credit-service
      dockerfile: Dockerfile
    container_name: captely-credit-service
    depends_on:
      - redis
    env_file: .env
    environment:
      - DATABASE_URL=postgresql://postgres:Capitalsteez_94400@db.kkbqrrrjlfxxtkboxmld.supabase.co:5432/postgres
      - PYTHONPATH=/app:/app/common
    ports:
      - "8003:8000"
    volumes:
      - ./backend/services/common:/app/common
    entrypoint: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
    restart: on-failure

  export-service:
    build:
      context: ./backend/services/export-service
      dockerfile: Dockerfile
    container_name: captely-export-service
    depends_on:
      - redis
    env_file: .env
    environment:
      - DATABASE_URL=postgresql://postgres:Capitalsteez_94400@db.kkbqrrrjlfxxtkboxmld.supabase.co:5432/postgres
      - PYTHONPATH=/app:/app/common
    ports:
      - "8004:8000"
    volumes:
      - ./backend/services/common:/app/common
    entrypoint: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
    restart: on-failure

  analytics-service:
    build:
      context: ./backend/services/analytics-service
      dockerfile: Dockerfile
    container_name: captely-analytics-service
    depends_on:
      - redis
    env_file: .env
    environment:
      - DATABASE_URL=postgresql://postgres:Capitalsteez_94400@db.kkbqrrrjlfxxtkboxmld.supabase.co:5432/postgres
      - PYTHONPATH=/app:/app/common
    ports:
      - "8005:8000"
    volumes:
      - ./backend/services/common:/app/common
    entrypoint: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
    restart: on-failure

  notification-service:
    build:
      context: ./backend/services/notification-service
      dockerfile: Dockerfile
    container_name: captely-notification-service
    depends_on:
      - redis
    env_file: .env
    environment:
      - DATABASE_URL=postgresql://postgres:Capitalsteez_94400@db.kkbqrrrjlfxxtkboxmld.supabase.co:5432/postgres
      - PYTHONPATH=/app:/app/common
    ports:
      - "8006:8000"
    volumes:
      - ./backend/services/common:/app/common
    entrypoint: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
    restart: on-failure

  billing-service:
    build:
      context: ./backend/services/billing-service
      dockerfile: Dockerfile
    container_name: captely-billing-service
    depends_on:
      - redis
    env_file: .env
    environment:
      - DATABASE_URL=postgresql://postgres:Capitalsteez_94400@db.kkbqrrrjlfxxtkboxmld.supabase.co:5432/postgres
      - PYTHONPATH=/app:/app/common
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
    ports:
      - "8007:8000"
    volumes:
      - ./backend/services/common:/app/common
    entrypoint: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
    restart: on-failure

  crm-service:
    build:
      context: ./backend/services/crm-service
      dockerfile: Dockerfile
    container_name: captely-crm-service
    depends_on:
      - redis
    env_file: .env
    environment:
      - DATABASE_URL=postgresql://postgres:Capitalsteez_94400@db.kkbqrrrjlfxxtkboxmld.supabase.co:5432/postgres
      - PYTHONPATH=/app:/app/common
    ports:
      - "8008:8000"
    volumes:
      - ./backend/services/common:/app/common
    entrypoint: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
    restart: on-failure

  enrichment-worker:
    build:
      context: ./backend/services/enrichment-worker
      dockerfile: Dockerfile
    container_name: captely-enrichment-worker
    depends_on:
      - redis
    env_file: .env
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:Capitalsteez_94400@db.kkbqrrrjlfxxtkboxmld.supabase.co:5432/postgres
      - PYTHONPATH=/app:/app/common
    volumes:
      - ./backend/services/common:/app/common
    entrypoint: ["celery", "-A", "common.celery_app:celery_app", "worker", "--loglevel=info"]
    restart: on-failure

  flower:
    build:
      context: ./backend/services/enrichment-worker
      dockerfile: Dockerfile
    container_name: captely-flower
    depends_on:
      - redis
      - enrichment-worker
    env_file: .env
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:Capitalsteez_94400@db.kkbqrrrjlfxxtkboxmld.supabase.co:5432/postgres
      - PYTHONPATH=/app:/app/common
    ports:
      - "5555:5555"
    volumes:
      - ./backend/services/common:/app/common
    entrypoint: ["celery", "-A", "common.celery_app:celery_app", "flower", "--port=5555"]
    restart: on-failure

  frontend:
    build:
      context: ./backend/frontend/nextjs-app
      dockerfile: Dockerfile.dev
    container_name: captely-frontend
    depends_on:
      - auth-service
      - import-service
      - credit-service
      - export-service
      - analytics-service
      - notification-service
      - billing-service
      - crm-service
    ports:
      - "3000:3000"
    restart: unless-stopped

volumes:
  captely_db-data:
