services:
  redis:
    image: redis:7-alpine
    container_name: captely-redis
    restart: unless-stopped

  db:
    image: postgres:16-alpine
    container_name: captely-db
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - db-data:/var/lib/postgresql/data

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: captely-auth-service
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "8000:8000"
    # Override to make sure Gunicorn/UVicorn worker sees your app under auth-service/app/main.py
    command: >
      gunicorn auth_service.app.main:app
      --worker-class uvicorn.workers.UvicornWorker
      --bind 0.0.0.0:8000

  import-service:
    build:
      context: ./import-service
      dockerfile: Dockerfile
    container_name: captely-import-service
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - db
      - redis
    ports:
      - "8001:8000"
    # Make sure uvicorn is pointed at import-service/app/main.py
    command: uvicorn import_service.app.main:app --host 0.0.0.0 --port 8000

  credit-service:
    build:
      context: ./credit-service
      dockerfile: Dockerfile
    container_name: captely-credit-service
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - db
    ports:
      - "8002:8000"
    # Point at credit-service/app/main.py
    command: uvicorn credit_service.app.main:app --host 0.0.0.0 --port 8000

  enrichment-worker:
    build:
      context: ./enrichment-worker
      dockerfile: Dockerfile
    container_name: captely-enrichment-worker
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - redis
    # Point Celery at enrichment-worker/app/tasks.py
    command: celery -A enrichment_worker.app.tasks worker --loglevel=info

volumes:
  db-data:
